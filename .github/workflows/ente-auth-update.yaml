name: ente-auth-update-check

permissions:
  contents: write

on:
  schedule:
    - cron: '0 0 * * *'  
  workflow_dispatch:

jobs:
  check-and-create-ebuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget jq coreutils

      - name: Check for new releases
        id: check_releases
        run: |
          releases=$(curl -s https://api.github.com/repos/ente-io/ente/releases | jq -r '.[].tag_name')
          auth_releases=$(echo "$releases" | grep "^auth-v")
          echo "::set-output name=auth_releases::$auth_releases"

      - name: Process each release
        id: process_releases
        run: |
          ebuild_dir="./app-misc/ente-auth"
          mkdir -p $ebuild_dir
          
          for release in ${{ steps.check_releases.outputs.auth_releases }}; do
            version=${release#auth-v}
            ebuild_file="${ebuild_dir}/ente-auth-${version}.ebuild"
            if [ ! -f "$ebuild_file" ]; then
              appimage_url="https://github.com/ente-io/ente/releases/download/${release}/ente-auth-v${version}-x86_64.AppImage"
              wget $appimage_url -O auth
              
              echo "# Copyright" > $ebuild_file
              echo "EAPI=8" >> $ebuild_file
              echo "DESCRIPTION=\"Ente Auth AppImage\"" >> $ebuild_file
              echo "SRC_URI=\"${appimage_url} -> auth\"" >> $ebuild_file
              echo "LICENSE=\"AGPL-3.0\"" >> $ebuild_file
              echo "SLOT=\"0\"" >> $ebuild_file
              echo "KEYWORDS=\"~amd64\"" >> $ebuild_file
              echo "DEPEND=\"\"" >> $ebuild_file
              echo "RDEPEND=\"\"" >> $ebuild_file
              echo "S=\"\${WORKDIR}\"" >> $ebuild_file
              echo "src_unpack() {" >> $ebuild_file
              echo "  true" >> $ebuild_file
              echo "}" >> $ebuild_file
              echo "src_install() {" >> $ebuild_file
              echo "  exeinto /usr/bin" >> $ebuild_file
              echo "  doexe auth" >> $ebuild_file
              echo "}" >> $ebuild_file

              # Generate the manifest for the new ebuild
              cd $ebuild_dir
              b2sum auth | cut -d' ' -f1 | tee auth.blake2b
              sha512sum auth | cut -d' ' -f1 | tee auth.sha512
              echo "DIST auth 0 BLAKE2B $(cat auth.blake2b) SHA512 $(cat auth.sha512)" > Manifest
              cd -
            fi
          done

      - name: Commit and push changes
        run: |
          git add ./app-misc/ente-auth
          git commit -m "Add ebuilds for new ente-auth releases" && 
          git pull --rebase &&
          git push || true
        if: steps.process_releases.conclusion == 'success'
