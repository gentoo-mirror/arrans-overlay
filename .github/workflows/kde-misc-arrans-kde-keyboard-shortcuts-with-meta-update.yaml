name: kde-misc/arrans-kde-keyboard-shortcuts-with-meta Update

permissions:
  contents: write

on:
  schedule:
    - cron: '20 1 * * *'
  workflow_dispatch:
  push:
    paths:
      - '.github/workflows/kde-misc-arrans-kde-keyboard-shortcuts-with-meta-update.yaml'

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

env:
  ebuild_category: kde-misc
  ebuild_name: arrans-kde-keyboard-shortcuts-with-meta
  github_owner: arran4
  github_repo: kde-keyboard-shortcuts
  description: "My keyboard bindings fast select."
  homepage: "https://arran4.github.io/"

jobs:
  check-and-create-ebuild:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Install required tools
        run: |
          sudo apt-get update
          sudo apt-get install -y wget jq coreutils

      - name: Process each release
        id: process_releases
        run: |
          ebuild_dir="./${ebuild_category}/${ebuild_name}"
          mkdir -p $ebuild_dir
          tags=$(curl -s https://api.github.com/repos/${{ env.github_owner }}/${{ env.github_repo }}/releases | jq -r '.[].tag_name')
          for tag in $tags; do
            version="${tag#v}"
            if [ "${version}" = "${tag}" ]; then
              echo "$version == $tag so there is no V removed skipping"
              continue
            fi
            if ! echo "$version" | egrep '^([0-9]+)\.([0-9]+)(\.([0-9]+))?(-r[0-9]+)?((-|_)(alpha|beta|rc|p)[0-9]*)*$'; then
              echo "$tag / $version doesn't match regexp";
              continue; 
            fi
            ebuild_file="${ebuild_dir}/${ebuild_name}-${version}.ebuild"
            if [ ! -f "$ebuild_file" ]; then
              # Create ebuild script
              {
                echo "# Generated via: https://github.com/arran4/arrans-private-overlay/blob/main/.github/workflows/kde-misc-arrans-kde-keyboard-shortcuts-with-meta-update.yaml"
                echo "EAPI=8"
                echo "DESCRIPTION=\"$description\""
                echo "HOMEPAGE=\"$homepage\""
                echo 'IUSE=""'
                echo "SRC_URI=\"  https://github.com/${{env.github_owner}}/${{env.github_repo}}/archive/refs/tags/v\${PV}.tar.gz -> \${P}.tar.gz \""
                echo "LICENSE=\"unlicensed\""
                echo "SLOT=\"0\""
                echo 'KEYWORDS="~alpha amd64 hppa ~ia64 ~mips ppc ppc64 ~riscv sparc x86"'
                echo 'RDEPEND=""'
                echo 'DEPEND="${RDEPEND}"'
                echo "S=\"\${WORKDIR}\"/kde-keyboard-shortcuts-\${PV}/"
                echo ""
                echo "src_unpack() {"
                echo "    unpack \${A}"
                echo "}"
                echo ""
                echo "src_install() {"
                echo "    insinto /usr/share/kcmkeys"
                echo "    doins arrans-kde-keyboard-shortcuts-with-meta.kksrc"
                echo "}"
                echo ""
              } > $ebuild_file

              # Generate the manifest for the new ebuild
              wget "https://github.com/${{env.github_owner}}/${{env.github_repo}}/archive/refs/tags/${tag}.tar.gz" -O "/tmp/${ebuild_name}-${version}.tar.gz"
              for e in "${ebuild_name}-${version}.tar.gz"; do
                echo "DIST $e $(stat -c %s "/tmp/${e}") BLAKE2B $(b2sum "/tmp/${e}" | cut -d' ' -f1) SHA512 $(sha512sum "/tmp/${e}" | cut -d' ' -f1)" | tee -a "${ebuild_dir}/Manifest"
                rm "/tmp/${e}"
              done
            fi
            break
          done

      - name: Commit and push changes
        run: |
          ebuild_dir="./${ebuild_category}/${ebuild_name}"
          git add "./${ebuild_dir}"
          git commit -m "Add ebuilds for new ${ebuild_name} releases" && 
          git pull --rebase &&
          git push || true
        if: steps.process_releases.conclusion == 'success'
